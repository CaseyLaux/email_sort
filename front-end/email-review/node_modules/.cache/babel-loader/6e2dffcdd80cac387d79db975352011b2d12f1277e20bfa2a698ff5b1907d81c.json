{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './EmailViewer.css';\nconst EmailViewer = () => {\n  _s();\n  const [humanSortedEmails, setHumanSortedEmails] = useState([]);\n  const [unsortedEmails, setUnsortedEmails] = useState([]);\n  const [humanSortedIndex, setHumanSortedIndex] = useState(0);\n  const [unsortedIndex, setUnsortedIndex] = useState(0);\n  const [rating, setRating] = useState('');\n  const [classification, setClassification] = useState('');\n  const [unsortedFilenames, setUnsortedFilenames] = useState([]);\n  useEffect(() => {\n    async function loadHumanSortedEmails() {\n      try {\n        const humanSortedUrl = `${process.env.PUBLIC_URL}/human_sorted/index.json`;\n        console.log('Fetching human_sorted index:', humanSortedUrl);\n        const humanSortedResponse = await fetch(humanSortedUrl);\n        const humanSortedFilenames = await humanSortedResponse.json();\n        const humanSortedEmailPromises = humanSortedFilenames.map(async filename => {\n          const emailResponse = await fetch(`${process.env.PUBLIC_URL}/human_sorted/${filename}`);\n          return await emailResponse.json();\n        });\n        const loadedHumanSortedEmails = await Promise.all(humanSortedEmailPromises);\n        return loadedHumanSortedEmails;\n      } catch (error) {\n        console.error('Error loading human_sorted emails:', error);\n      }\n    }\n    async function loadUnsortedEmails() {\n      try {\n        const unsortedUrl = `${process.env.PUBLIC_URL}/unsorted/index.json`;\n        console.log('Fetching unsorted index:', unsortedUrl);\n        const unsortedResponse = await fetch(unsortedUrl);\n        const unsortedFilenames = await unsortedResponse.json();\n        const start = 0;\n        const limit = 50;\n        const end = Math.min(start + limit, unsortedFilenames.length);\n        const unsortedEmailPromises = unsortedFilenames.slice(start, end).map(async filename => {\n          const emailResponse = await fetch(`${process.env.PUBLIC_URL}/unsorted/${filename}`);\n          return await emailResponse.json();\n        });\n        const loadedUnsortedEmails = await Promise.all(unsortedEmailPromises);\n        return {\n          unsorted: loadedUnsortedEmails,\n          filenames: unsortedFilenames\n        };\n      } catch (error) {\n        console.error('Error loading unsorted emails:', error);\n      }\n    }\n    loadHumanSortedEmails().then(setHumanSortedEmails);\n    loadUnsortedEmails().then(loadedUnsortedEmails => {\n      setUnsortedEmails(loadedUnsortedEmails.unsorted);\n      setUnsortedFilenames(loadedUnsortedEmails.filenames);\n    });\n  }, []);\n\n  // ... (The rest of your existing code remains unchanged)\n};\n_s(EmailViewer, \"ux0X8vTU8jJ3NyKsB6ReMP7xlgA=\");\n_c = EmailViewer;\nexport default EmailViewer;\nvar _c;\n$RefreshReg$(_c, \"EmailViewer\");","map":{"version":3,"names":["React","useState","useEffect","EmailViewer","_s","humanSortedEmails","setHumanSortedEmails","unsortedEmails","setUnsortedEmails","humanSortedIndex","setHumanSortedIndex","unsortedIndex","setUnsortedIndex","rating","setRating","classification","setClassification","unsortedFilenames","setUnsortedFilenames","loadHumanSortedEmails","humanSortedUrl","process","env","PUBLIC_URL","console","log","humanSortedResponse","fetch","humanSortedFilenames","json","humanSortedEmailPromises","map","filename","emailResponse","loadedHumanSortedEmails","Promise","all","error","loadUnsortedEmails","unsortedUrl","unsortedResponse","start","limit","end","Math","min","length","unsortedEmailPromises","slice","loadedUnsortedEmails","unsorted","filenames","then","_c","$RefreshReg$"],"sources":["C:/Users/casey/PycharmProjects/email_sort/front-end/email-review/src/EmailViewer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './EmailViewer.css';\r\n\r\nconst EmailViewer = () => {\r\n  const [humanSortedEmails, setHumanSortedEmails] = useState([]);\r\n  const [unsortedEmails, setUnsortedEmails] = useState([]);\r\n  const [humanSortedIndex, setHumanSortedIndex] = useState(0);\r\n  const [unsortedIndex, setUnsortedIndex] = useState(0);\r\n  const [rating, setRating] = useState('');\r\n  const [classification, setClassification] = useState('');\r\n  const [unsortedFilenames, setUnsortedFilenames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function loadHumanSortedEmails() {\r\n      try {\r\n        const humanSortedUrl = `${process.env.PUBLIC_URL}/human_sorted/index.json`;\r\n        console.log('Fetching human_sorted index:', humanSortedUrl);\r\n        const humanSortedResponse = await fetch(humanSortedUrl);\r\n        const humanSortedFilenames = await humanSortedResponse.json();\r\n      \r\n        const humanSortedEmailPromises = humanSortedFilenames.map(async (filename) => {\r\n          const emailResponse = await fetch(`${process.env.PUBLIC_URL}/human_sorted/${filename}`);\r\n          return await emailResponse.json();\r\n        });\r\n      \r\n        const loadedHumanSortedEmails = await Promise.all(humanSortedEmailPromises);\r\n        return loadedHumanSortedEmails;\r\n      } catch (error) {\r\n        console.error('Error loading human_sorted emails:', error);\r\n      }\r\n      \r\n    }\r\n\r\n    async function loadUnsortedEmails() {\r\n      try {\r\n        const unsortedUrl = `${process.env.PUBLIC_URL}/unsorted/index.json`;\r\n        console.log('Fetching unsorted index:', unsortedUrl);\r\n        const unsortedResponse = await fetch(unsortedUrl);\r\n        const unsortedFilenames = await unsortedResponse.json();\r\n      \r\n        const start = 0;\r\n        const limit = 50;\r\n        const end = Math.min(start + limit, unsortedFilenames.length);\r\n      \r\n        const unsortedEmailPromises = unsortedFilenames.slice(start, end).map(async (filename) => {\r\n          const emailResponse = await fetch(`${process.env.PUBLIC_URL}/unsorted/${filename}`);\r\n          return await emailResponse.json();\r\n        });\r\n      \r\n        const loadedUnsortedEmails = await Promise.all(unsortedEmailPromises);\r\n        return { unsorted: loadedUnsortedEmails, filenames: unsortedFilenames };\r\n      } catch (error) {\r\n        console.error('Error loading unsorted emails:', error);\r\n      }\r\n      \r\n    }\r\n\r\n    loadHumanSortedEmails().then(setHumanSortedEmails);\r\n    loadUnsortedEmails().then((loadedUnsortedEmails) => {\r\n      setUnsortedEmails(loadedUnsortedEmails.unsorted);\r\n      setUnsortedFilenames(loadedUnsortedEmails.filenames);\r\n    });\r\n  }, []);\r\n\r\n  // ... (The rest of your existing code remains unchanged)\r\n};\r\n\r\nexport default EmailViewer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}