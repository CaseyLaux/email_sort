{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casey\\\\PycharmProjects\\\\email_sort\\\\front-end\\\\email-review\\\\src\\\\EmailViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailViewer = () => {\n  _s();\n  const [emails, setEmails] = useState([]);\n  useEffect(() => {\n    async function loadEmails() {\n      const emailDirectory = 'human_sorted'; // Replace with your email directory\n      const response = await fetch(`${process.env.PUBLIC_URL}/${emailDirectory}/index.json`);\n      const filenames = await response.json();\n      const emailPromises = filenames.map(async filename => {\n        const emailResponse = await fetch(`${process.env.PUBLIC_URL}/${emailDirectory}/${filename}`);\n        return await emailResponse.json();\n      });\n      const loadedEmails = await Promise.all(emailPromises);\n      setEmails(loadedEmails);\n    }\n    loadEmails();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: emails.map((email, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: email.email_subject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"From: \", email.email_sender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date: \", email.email_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: email.prompt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailViewer, \"Pz1emXvf1o2teMcG4tW42BuWti4=\");\n_c = EmailViewer;\nexport default EmailViewer;\nvar _c;\n$RefreshReg$(_c, \"EmailViewer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EmailViewer","_s","emails","setEmails","loadEmails","emailDirectory","response","fetch","process","env","PUBLIC_URL","filenames","json","emailPromises","map","filename","emailResponse","loadedEmails","Promise","all","children","email","index","email_subject","fileName","_jsxFileName","lineNumber","columnNumber","email_sender","email_date","prompt","_c","$RefreshReg$"],"sources":["C:/Users/casey/PycharmProjects/email_sort/front-end/email-review/src/EmailViewer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst EmailViewer = () => {\r\n  const [emails, setEmails] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function loadEmails() {\r\n      const emailDirectory = 'human_sorted'; // Replace with your email directory\r\n      const response = await fetch(`${process.env.PUBLIC_URL}/${emailDirectory}/index.json`);\r\n      const filenames = await response.json();\r\n\r\n      const emailPromises = filenames.map(async (filename) => {\r\n        const emailResponse = await fetch(`${process.env.PUBLIC_URL}/${emailDirectory}/${filename}`);\r\n        return await emailResponse.json();\r\n      });\r\n\r\n      const loadedEmails = await Promise.all(emailPromises);\r\n      setEmails(loadedEmails);\r\n    }\r\n\r\n    loadEmails();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {emails.map((email, index) => (\r\n        <div key={index}>\r\n          <h3>{email.email_subject}</h3>\r\n          <p>From: {email.email_sender}</p>\r\n          <p>Date: {email.email_date}</p>\r\n          <pre>{email.prompt}</pre>\r\n          <hr />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailViewer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,eAAeO,UAAUA,CAAA,EAAG;MAC1B,MAAMC,cAAc,GAAG,cAAc,CAAC,CAAC;MACvC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,UAAW,IAAGL,cAAe,aAAY,CAAC;MACtF,MAAMM,SAAS,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;MAEvC,MAAMC,aAAa,GAAGF,SAAS,CAACG,GAAG,CAAC,MAAOC,QAAQ,IAAK;QACtD,MAAMC,aAAa,GAAG,MAAMT,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,UAAW,IAAGL,cAAe,IAAGU,QAAS,EAAC,CAAC;QAC5F,OAAO,MAAMC,aAAa,CAACJ,IAAI,EAAE;MACnC,CAAC,CAAC;MAEF,MAAMK,YAAY,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACN,aAAa,CAAC;MACrDV,SAAS,CAACc,YAAY,CAAC;IACzB;IAEAb,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAqB,QAAA,EACGlB,MAAM,CAACY,GAAG,CAAC,CAACO,KAAK,EAAEC,KAAK,kBACvBvB,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,EAAKC,KAAK,CAACE;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAC9B5B,OAAA;QAAAqB,QAAA,GAAG,QAAM,EAACC,KAAK,CAACO,YAAY;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACjC5B,OAAA;QAAAqB,QAAA,GAAG,QAAM,EAACC,KAAK,CAACQ,UAAU;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAC/B5B,OAAA;QAAAqB,QAAA,EAAMC,KAAK,CAACS;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eACzB5B,OAAA;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAAA,GALEL,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAOhB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAAC1B,EAAA,CAlCID,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAoCjB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}