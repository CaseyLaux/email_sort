{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casey\\\\PycharmProjects\\\\email_sort\\\\front-end\\\\email-review\\\\src\\\\components\\\\EmailList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailList = () => {\n  _s();\n  const [emails, setEmails] = useState([]);\n  const [emailContents, setEmailContents] = useState([]);\n  useEffect(() => {\n    fetch(\"/index.json\").then(response => response.json()).then(data => {\n      setEmails(data);\n      fetchEmailContents(data);\n    });\n  }, []);\n  const fetchEmailContents = async emailFiles => {\n    const emailPromises = emailFiles.map(emailFile => fetch(`/human_sorted/${emailFile}`).then(response => response.text()));\n    const contents = await Promise.all(emailPromises);\n    setEmailContents(contents);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Emails\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: emailContents.map((content, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Email \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailList, \"faw+UsaH58/Xo5HL9B7JFj5yE44=\");\n_c = EmailList;\nexport default EmailList;\nvar _c;\n$RefreshReg$(_c, \"EmailList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EmailList","_s","emails","setEmails","emailContents","setEmailContents","fetch","then","response","json","data","fetchEmailContents","emailFiles","emailPromises","map","emailFile","text","contents","Promise","all","children","fileName","_jsxFileName","lineNumber","columnNumber","content","index","_c","$RefreshReg$"],"sources":["C:/Users/casey/PycharmProjects/email_sort/front-end/email-review/src/components/EmailList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst EmailList = () => {\r\n  const [emails, setEmails] = useState([]);\r\n  const [emailContents, setEmailContents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/index.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setEmails(data);\r\n        fetchEmailContents(data);\r\n      });\r\n  }, []);\r\n\r\n  const fetchEmailContents = async (emailFiles) => {\r\n    const emailPromises = emailFiles.map((emailFile) =>\r\n      fetch(`/human_sorted/${emailFile}`).then((response) => response.text())\r\n    );\r\n    const contents = await Promise.all(emailPromises);\r\n    setEmailContents(contents);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Emails</h2>\r\n      <ul>\r\n        {emailContents.map((content, index) => (\r\n          <li key={index}>\r\n            <div>\r\n              <strong>Email {index + 1}</strong>\r\n            </div>\r\n            <pre>{content}</pre>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,aAAa,CAAC,CACjBC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdP,SAAS,CAACO,IAAI,CAAC;MACfC,kBAAkB,CAACD,IAAI,CAAC;IAC1B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,kBAAkB,GAAG,MAAOC,UAAU,IAAK;IAC/C,MAAMC,aAAa,GAAGD,UAAU,CAACE,GAAG,CAAEC,SAAS,IAC7CT,KAAK,CAAE,iBAAgBS,SAAU,EAAC,CAAC,CAACR,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACQ,IAAI,EAAE,CAAC,CACxE;IACD,MAAMC,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACN,aAAa,CAAC;IACjDR,gBAAgB,CAACY,QAAQ,CAAC;EAC5B,CAAC;EAED,oBACElB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACfzB,OAAA;MAAAqB,QAAA,EACGhB,aAAa,CAACU,GAAG,CAAC,CAACW,OAAO,EAAEC,KAAK,kBAChC3B,OAAA;QAAAqB,QAAA,gBACErB,OAAA;UAAAqB,QAAA,eACErB,OAAA;YAAAqB,QAAA,GAAQ,QAAM,EAACM,KAAK,GAAG,CAAC;UAAA;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAU;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC9B,eACNzB,OAAA;UAAAqB,QAAA,EAAMK;QAAO;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO;MAAA,GAJbE,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAMf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEV,CAAC;AAACvB,EAAA,CApCID,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}