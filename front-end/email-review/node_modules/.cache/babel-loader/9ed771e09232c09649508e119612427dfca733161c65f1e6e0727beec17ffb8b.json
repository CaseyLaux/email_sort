{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\casey\\\\PycharmProjects\\\\email_sort\\\\front-end\\\\email-review\\\\src\\\\App.js\";\nimport React from 'react';\nimport EmailViewer from './EmailViewer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  async function callPythonScript() {\n    const url = \"http://localhost:5000/run_python_script\";\n    const data = {};\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (response.ok) {\n        const result = await response.json();\n        console.log('Python script result:', result);\n      } else {\n        console.error('Error calling Python script:', response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error('Error calling Python script:', error);\n    }\n  }\n\n  // Call the function without blocking the main process\n  callPythonScript();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(EmailViewer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","EmailViewer","jsxDEV","_jsxDEV","App","callPythonScript","url","data","response","fetch","method","headers","body","JSON","stringify","ok","result","json","console","log","error","status","statusText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/casey/PycharmProjects/email_sort/front-end/email-review/src/App.js"],"sourcesContent":["import React from 'react';\nimport EmailViewer from './EmailViewer';\n\n\n\nfunction App() {\n  \n  async function callPythonScript() {\n    const url = \"http://localhost:5000/run_python_script\";\n    const data = {\n    };\n  \n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n  \n      if (response.ok) {\n        const result = await response.json();\n        console.log('Python script result:', result);\n      } else {\n        console.error('Error calling Python script:', response.status, response.statusText);\n      }\n    } catch (error) {\n      console.error('Error calling Python script:', error);\n    }\n  }\n  \n  // Call the function without blocking the main process\n  callPythonScript();\n  return (\n    <div className=\"App\">\n      <EmailViewer/>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIxC,SAASC,GAAGA,CAAA,EAAG;EAEb,eAAeC,gBAAgBA,CAAA,EAAG;IAChC,MAAMC,GAAG,GAAG,yCAAyC;IACrD,MAAMC,IAAI,GAAG,CACb,CAAC;IAED,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;QAChCI,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;MAC3B,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACO,EAAE,EAAE;QACf,MAAMC,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;QACpCC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,MAAM,CAAC;MAC9C,CAAC,MAAM;QACLE,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEZ,QAAQ,CAACa,MAAM,EAAEb,QAAQ,CAACc,UAAU,CAAC;MACrF;IACF,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF;;EAEA;EACAf,gBAAgB,EAAE;EAClB,oBACEF,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBrB,OAAA,CAACF,WAAW;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACV;AAEV;AAACC,EAAA,GAlCQzB,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}